/**
 * s-is
 * MIT License Copyright (c) 2016 Serhii Perekhrest <allsajera@gmail.com> ( Sajera )
 */
(function(d,g){function e(a){return Object.assign(d.bind(a),a)}var c={}.toString,f={"typeof":function(a){for(var b in f)if("typeof"!=b&&f[b](a))break;return"defined"==b?typeof a:b},nan:function(a){return a!==a},infinity:function(a){return Infinity===a||-Infinity===a},"null":function(a){return null===a},number:function(a){return"number"==typeof a},string:function(a){return"string"==typeof a},"boolean":function(a){return"boolean"==typeof a},"function":function(a){return"function"==typeof a},undefined:function(a){return"undefined"==
typeof a},array:function(a){return"[object Array]"==c.call(a)},object:function(a){return"object"==typeof a},defined:function(a){return"undefined"!==typeof a}},b=e(Object.assign({platform:e({node:function(){return"undefined"!=typeof process&&"[object process]"==c.call(process)},browser:function(){return"undefined"!=typeof window&&"[object Window]"==c.call(window)}}),support:e({symbol:function(){return"function"==typeof Symbol&&b.symbol(Symbol())},promise:function(){return"function"==typeof Promise&&
b.promise(new Promise(new Function,new Function))}})},{empty:function(a,c){if((b.string(a)||b.object(a)||b["function"](a))&&!b["null"](a)){for(var d in a)if(Object.prototype.hasOwnProperty.call(a,d))return!1;return!0}if(c)throw Error("A you sure ? - "+b["typeof"](a).toUpperCase()+" may contain child elements ?");return!0},finite:function(a){return b._number(a)},date:function(a){return"[object Date]"==c.call(a)},error:function(a){return"[object Error]"==c.call(a)},symbol:function(a){return"[object Symbol]"==
c.call(a)},regexp:function(a){return"[object RegExp]"==c.call(a)},argument:function(a){return"[object Arguments]"==c.call(a)},promise:function(a){return"[object Promise]"==c.call(a)||a&&b["function"](a.then)}},f,{_object:function(a){return"[object Object]"==c.call(a)},_number:function(a){return b.number(a)&&!b.nan(a)&&a!=a+1}}));b.platform.node()?module.exports=b:g.is=b})(function(d){if("function"==typeof d.toLowerCase&&(d=d.toLowerCase())&&"function"==typeof this[d])return this[d].apply(null,Array.prototype.slice.call(arguments,
1));throw Error('No such check as "'+d+'"');},this);